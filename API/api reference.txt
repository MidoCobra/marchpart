Mainly There is two types of API permissions Authenticated and non-Authenticated)
kindly start building your app according to these non-Authenticated APIS:

_______________________________________________________________________________
_______________________________________________________________________________

You can access it using curl as following:

Request:(paginated response)
curl http://marchpart.com/api/brands/
Response sample:
    {
        "id": 4,
        "name": "BMW",
        "slug": "bmw",
        "name_arabic": "يى ام دابليو",
        "image": "http://localhost:8000/media/media/p90385570-highres-the-new-bmw-communic-1583423938_Y5IRRZY.jpg"
    },

Request: (non-paginated)
with Header for language ordering:
http https://marchpart.com/api/all-brands/ H:en
http https://marchpart.com/api/all-brands/ H:ar
 No Header:
http https://marchpart.com/api/all-brands/
http https://marchpart.com/api/all-brands-arabic/


---------------------------------
And For Searching:
curl http://127.0.0.1:8000/api/brands/?name=xxx

Available Search Fields:
['name', 'name_arabic', 'slug', 'id']

_______________________________________________________________________________
_______________________________________________________________________________

Request:
curl https://marchpart.com/api/models/
Response sample:
    {
        "id": 8,
        "name": "320",
        "slug": "320",
        "name_arabic": "320 عربى",
        "image": "http://localhost:8000/media/media/062922_2015_bmw_Serie_3-640x400.jpg",
        "brand": 4
    },

---------------------------------
And For Searching:
curl http://127.0.0.1:8000/api/models/?name=xxx

Available Search Fields:
['brand_name', 'name', 'name_arabic', 'slug', 'id']

----------------------------------
Get all models without pagination:

Request:
--------

http https://marchpart.com/api/all-models/
_______________________________________________________________________________
_______________________________________________________________________________
Request:
curl http://marchpart.com/api/engineCapacity/
Response sample:
    {
        "id": 3,
        "eng_capacity": 1500
    },

_______________________________________________________________________________
_______________________________________________________________________________
curl http://marchpart.com/api/manfactureYear/
Response sample:
    {
        "id": 1,
        "manfacture_year": 1980
    },

_______________________________________________________________________________
_______________________________________________________________________________
Request:
curl http://marchpart.com/api/categories/
Response sample:
    {
        "id": 2,
        "name": "Engine Parts",
        "name_arabic": "أجزاء الموتور",
        "slug": "engine-parts",
        "image": "http://localhost:8000/media/media/Mercedes-Benz_500I_engine_rear_Mercedes-Benz_Museum.jpg",
        "category_banner": "http://localhost:8000/media/media/lightbulbs-header-870x220.jpg",
        "category_leftSide_image": "http://localhost:8000/media/media/viper_hw_FRF36_box270x420.jpg",
        "created_at": "2020-07-29T10:48:45.576129+03:00",
        "updated_at": "2020-08-27T17:37:09.417199+03:00"
    },


---------------------------------
And For Searching:
curl http://127.0.0.1:8000/api/categories/?name=xxx

Available Search Fields:
['name', 'name_arabic', 'slug', 'id']
_______________________________________________________________________________
_______________________________________________________________________________
Request:
curl http://marchpart.com/api/products/
Response sample:
{
    [
        {
            "available": true,
            "category": 15,
            "category_name": "RADIATOR  & AC",
            "created_at": "2020-11-05T18:36:51.090255+02:00",
            "description": "A/C Condenser With Fluid Reservoir Genuine Skoda Kodiaq (2016-2018) (5Q0816411BH)\r\n- A/C - Air Conditioner Condenser With Drier\r\nCompatible With :-\r\n- Skoda Karoq (2017-2018)\r\n- Skoda Octavia A7 (2012-2017)\r\n- Skoda Superb (2015-2018)",
            "description_arabic": "سربنتينة تكييف خارجية اصلى سكودا كودياك (2016-2018)\r\n- مكيف هواء - مكثف مكيف مع مجفف\r\nموافق مع :-\r\n- سكودا كاروك (2017-2018)\r\n- سكودا أوكتافيا A7 (2012-2017)\r\n- سكودا سوبيرب (2015-2018)",
            "engine_capacity": null,
            "features": "",
            "features_arabic": "",
            "hidden": false,
            "id": 8265,
            "image": "https://marchpart.com/media/media/5Q0816411BH_270_d7j2jY6.jpg",
            "image2": "https://marchpart.com/media/media/5Q0816411BH_270_r2seAiL.jpg",
            "image3": "https://marchpart.com/media/media/5Q0816411BH_800_GxYUzQJ.jpg",
            "image4": "https://marchpart.com/media/media/5Q0816411BH_800_L9cmGYa.jpg",
            "image5": "https://marchpart.com/media/media/5Q0816411BH_800_cpIzi89.jpg",
            "made_in": "Germany",
            "made_in_arabic": "ألمانيا",
            "manfacture_date": [
                {
                    "id": 3,
                    "manfacture_year": 2017
                },
                {
                    "id": 38,
                    "manfacture_year": 2016
                },
                {
                    "id": 39,
                    "manfacture_year": 2018
                }
            ],
            "max_per_order": 2,
            "min_per_order": 1,
            "model": [
                {
                    "brand": 4,
                    "brand_name": "SKODA",
                    "id": 317,
                    "image": "https://marchpart.com/media/media/KODIAQ.jpg",
                    "name": "KODIAQ",
                    "name_arabic": "كودياك",
                    "slug": "kodiaq"
                }
            ],
            "name": "A/C Condenser With Fluid Reservoir Genuine Skoda Kodiaq (2016-2018) (5Q0816411BH)",
            "name_arabic": "سربنتينة تكييف خارجية اصلى سكودا كودياك (2016-2018)",
            "price": "5288.00",
            "product_commercial_name": "A/C Condenser With Fluid Reservoir Genuine Skoda Kodiaq (2016-2018) (5Q0816411BH)",
            "product_commercial_name_arabic": "سربنتينة تكييف خارجية اصلى سكودا كودياك (2016-2018)",
            "sale_price": null,
            "seller_recommendation": false,
            "slug": "c-condenser-fluid-reservoir-genuine-skoda-kodiaq-2016-2018-5q0816411bh",
            "stock": 2,
            "updated_at": "2020-11-11T17:56:22.275878+02:00",
            "url_arabic": "https://marchpart.com/shop/arabiclanguage/product/arabiclanguage/8265/c-condenser-fluid-reservoir-genuine-skoda-kodiaq-2016-2018-5q0816411bh",
            "url_english": "https://marchpart.com/shop/englishlanguage/product/englishlanguage/8265/c-condenser-fluid-reservoir-genuine-skoda-kodiaq-2016-2018-5q0816411bh",
            "youtube_link": null
        }
    ]
}


---------------------------------
And For Searching:
curl http://127.0.0.1:8000/api/products/?name=xxx

Available Search Fields:
[
        'name',
        'name_arabic',
        'slug',
        'model',
        'engine_capacity',
        'manfacture_date',
        'seller_recommendation', (True or False)
        'hidden', (True or False)
        'id',
    ]


_______________________________________________________________________________
_______________________________________________________________________________
Request:
curl http://marchpart.com/api/shippingCosts/
Response sample:
    {
        "id": 1,
        "shipping_city": "cairo",
        "shipping_cost": "10.00"
    },
_______________________________________________________________________________
_______________________________________________________________________________
Request:
curl http://marchpart.com/api/reviewProducts/
Response sample:
    {
        "id": 3,
        "rate_score": "5",
        "product": "michllane",
        "pub_date": "2020-08-10T09:22:16.529555+03:00",
        "user_name": "mohamed",
        "comment": "good tires from japan",
        "Reply": null,
        "rate": 3
    },

_______________________________________________________________________________
_______________________________________________________________________________
Request:
curl http://marchpart.com/api/homePageAdds/
Response sample:
    {
        "id": 1,
        "slide_title": "offer car charger",
        "slide_image": "http://localhost:8000/media/media/ford1920x720.jpg",
        "product": 1
    },
_______________________________________________________________________________
_______________________________________________________________________________
Request:
curl http://marchpart.com/api/homePageBanners/
Response sample:
    {
        "id": 1,
        "banner_title": "test",
        "banner_image": "http://localhost:8000/media/media/bmw640x400.jpg",
        "product": null
    },
_______________________________________________________________________________
_______________________________________________________________________________
Request:
curl http://marchpart.com/api/blogTags/
Response sample:
    {
        "id": 1,
        "tag": "repair",
        "tag_arabic": "اصلاح"
    },
_______________________________________________________________________________
_______________________________________________________________________________
Request:
curl https://marchpart.com/api/blogs/
Response sample:
    {
        "id": 1,
        "author": "mimo",
        "author_arabic": "ميمو",
        "title": "opppaaaz!!",
        "title_arabic": "اوعى ",
        "paragraph_1_heading": "koko poko kakoko",
        "paragraph_1": "koko poko kakokokoko poko kakokokoko poko kakokokoko poko kakoko\r\nkoko poko kakokokoko poko kakokokoko poko kakokokoko poko kakokokoko poko kakokokoko poko kakokokoko poko kakokokoko poko kakokokoko poko kakokokoko poko kakokokoko poko kakokokoko poko kakokokoko poko kakokokoko poko kakokokoko poko kakokokoko poko kakokokoko poko kakokokoko poko kakokokoko poko kakokokoko poko kakokokoko poko kakokokoko poko kakokokoko poko kakoko",
        "paragraph_2_heading": "koko poko kakoko",
        "paragraph_2": "koko poko kakoko\r\nkoko poko kakokokoko poko kakoko\r\n\r\n\r\nkoko poko kakoko\r\n\r\nkoko poko kakoko\r\n\r\nkoko poko kakoko\r\n\r\nkoko poko kakokov",
        "paragraph_3_heading": "koko poko ka",
        "paragraph_3": "koko poko kakoko",
        "paragraph_1_heading_arabic": "يا جمال البلح باللبنيا جمال البلح باللبنيا جمال البلح باللبنيا جمال البلح باللبن",
        "paragraph_1_arabic": "يا جمال البلح باللبنيا جمال البلح باللبنيا جمال البلح باللبنيا جمال البلح باللبنيا جمال البلح باللبنيا جمال البلح باللبنيا جمال البلح باللبنيا جمال البلح باللبنيا جمال البلح باللبنيا جمال البلح باللبنيا جمال البلح باللبنيا جمال البلح باللبنيا جمال البلح باللبنيا جمال البلح باللبنيا جمال البلح باللبنيا جمال البلح باللبنيا جمال البلح باللبنيا جمال البلح باللبنيا جمال البلح باللبنيا جمال البلح باللبنيا جمال البلح باللبنيا جمال البلح باللبنيا جمال البلح باللبنيا جمال البلح باللبنيا جمال البلح باللبنيا جمال البلح باللبنيا جمال البلح باللبن",
        "paragraph_2_heading_arabic": "يا جمال البلح باللبنيا جمال البلح باللبنيا جمال البلح باللبن",
        "paragraph_2_arabic": "يا جمال البلح باللبنيا جمال البلح باللبنيا جمال البلح باللبنيا جمال البلح باللبنيا جمال البلح باللبنيا جمال البلح باللبنيا جمال البلح باللبنيا جمال البلح باللبنيا جمال البلح باللبنيا جمال البلح باللبنيا جمال البلح باللبنيا جمال البلح باللبنيا جمال البلح باللبنيا جمال البلح باللبن",
        "paragraph_3_heading_arabic": "يا جمال البلح باللبنيا جمال البلح باللبن",
        "paragraph_3_arabic": "يا جمال البلح \r\n\r\n\r\nيا جمال البلح باللبن\r\n\r\n\r\nيا جمال البلح باللبن\r\n\r\nيا جمال البلح باللبنباللبنيا جمال البلح باللبن",
        "youtube_link": null,
        "image": "http://localhost:8000/media/media/deals_1-1-900x600.jpg",
        "image2": "http://localhost:8000/media/media/mzl.had270x420.jpg",
        "created_at": "2020-08-28T16:36:55.010462+03:00",
        "tag": [
            2
        ]
    },


Last Three Blogs:
Request:
http https://marchpart.com/api/last3blogs/
_______________________________________________________________________________
_______________________________________________________________________________

Pagination:

pagination is limited to 20 items anywhere in the project.

Just add to any available API request: /?page=Number

Example:
C:curl http://marchpart.com/api/products/?page=3

Response will be like:

{
    "count": 1002,
    "next": "http://marchpart.com/api/products/?page=4",
    "previous": "http://marchpart.com/api/products/?page=2",
    "results": [
        {
            ....
        }
    ]
}
_______________________________________________________________________________
_______________________________________________________________________________
Search products by like% (name__icontains) :

Example: http://marchpart.com/api/searchAPI/?search=charge
Note: always use "search=" and then the phrase

Response Will Be Like:

{
    "count": 2,
    "next": null,
    "previous": null,
    "results": [
        {}
    ]
}

**count is number of results
Note: This filter also shoud work for searching by "id" number of product


---------------------------------------------- Advanced Search For Products-----------------------------------------------
Example:  (request)
http https://marchpart.com/api/searchByModel/corolla/1982/1600
 where:
  'corolla' is the model
  '1982' is manfacture_date
  '1600' is engine_capacity

Notes:
- User can search by only model (and in this case you have to replace the other two fields in the request with "none" phrase)
  e.g : http https://marchpart.com/api/searchByModel/corolla/none/none
- Also search should work without engine_capacity field only or without manfacture_date only(always replace empty field with "none" as pre example)
- never send a request with model=none




_______________________________________________________________________________
_______________________________________________________________________________
Filter Products By Category:

Example: http://marchpart.com/api/filterProductsByCategory/?search=tires,false

Where 'tires' is  the category 'name' field & ',flase' value is mandatory phrase which refers to hidden boolean field which is false



_______________________________________________________________________________
_______________________________________________________________________________

New Arrivals: (Results are limited to 12 queries)
http://marchpart.com/api/productQueries/?new=true

Reduced Prices: (Results are limited to 12 queries)
http://marchpart.com/api/productQueries/?reduced=true

Seller Recommendations: (Results are limited to 12 queries)
http://127.0.0.1:8000/api/productQueries/?recommend=true

_______________________________________________________________________________
_______________________________________________________________________________

Contact US
----------
Request:
http POST http://localhost:8000/api/contact-us/ name=test email=a@api.com enquiry="bal7 elseneeen awi ba2ah"

Response:
---------
HTTP/1.1 201 Created
Allow: POST, OPTIONS

{
    "answered": false,
    "closed": false,
    "created_at": "2020-10-31T15:55:33.003619+02:00",
    "email": "a@api.com",
    "enquiry": "mobile field not required",
    "id": 4,
    "mobile": null,
    "name": "test"
}

Note:
====
created_at field will be filled automatically

_______________________________________________________________________________
_______________________________________________________________________________

------------------------ Star Ratings ---------------------------

Note: user should rate a product for one time only (non-editable once sent to the site)

* First step You have to send the product "id" in a request to get its rating id number:

Request:
--------
http https://marchpart.com/api/ratings/?object_id=3655   (((...DON'T USE THIS...)))

- Where object_id the product id

Response:
---------
{
    "count": 1,
    "next": null,
    "previous": null,
    "results": [
        {
            "average": "3.000",
            "content_type": 14,
            "count": 1,
            "id": 3510,
            "object_id": 3655,
            "total": 3
        }
    ]
}

* Now you will get in the response the "id" value which is the id of the rating object it self (note: it is not the same as the product id)

Now send it in a request:

Request:
--------

http POST http://marchpart.com/api/user-create-rate/ score=4 rating=3510 user=2  (((...DON'T USE THIS...)))

required fields:
 user: send user id
 rating: refers to the object that will be rated (use the id of the rating object , that you got in above response)
 score: the rate from 1 to 5 only

Response:
---------
{
    "created": "2020-11-13T10:37:40.529956+02:00",
    "id": 7,
    "ip": null,
    "modified": "2020-11-13T10:37:40.529956+02:00",
    "rating": 9,
    "score": 4,
    "user": 2
}

Note: IP field is not required (if it is available you may sent it in the request)

___________________________________
___________________________________
___________________________________
UPDATED RATINGS APIS:    
---------------------
(user must be logged in to rate)

Request:
http POST https://marchpart.com/api/rate-product/13818/5 "Authorization: token 2aa5e75cc636217cb943fb009d8e28504e59"

where "13818" is the product id
And "5" is the score of rating (from 1 to 5 only)


Response: (Success)
{
    "detail": "desertcamel rating 5 for Quick Coupler Upper Genuine Skoda Karoq (2020) (5Q0122291AM)",
    "status": "producted rated"
}

Response: (rerated object):
{
    "detail": "user already rated this product"
}


---------------------------------------
To Get The Ratings of sepcific product:
---------------------------------------

Request:
--------

http http://marchpart.com/api/ratings/?object_id=2     

** Where '2' is the id number of the product

Response:
---------

{
    "count": 1,
    "next": null,
    "previous": null,
    "results": [
        {
            "average": "5.000",
            "content_type": 10,
            "count": 1,
            "id": 3,
            "object_id": 2,
            "total": 5
        }
    ]
}

Note:
"count" indicates number of users who rated the object(product)
"total: is the total numbers of stars given to the object by all users who rated...
"Average" is a result of dividing "total" over "count"

_______________________________________________________________________________
_______________________________________________________________________________

 Creating Order (Only registered users)
----------------------------------------
country field must be Egypt, no choices for user in that.
city field will be selected from shipping cities only api

Request:
http http://localhost:8000/api/order-create/ first_name="api Order" 'last_namelast_name'=t email=api@api.com address=a postal_code=1 city=c country="Egypt" phone1=12345 phone2=1234567 "Authorization: Token e4da7ad85b139af164054aba3ca1c18078704fe8"

Response:
HTTP/1.1 201 Created
Allow: POST, OPTIONS
Content-Length: 514
Content-Type: application/json
Vary: Accept
X-Content-Type-Options: nosniff
X-Frame-Options: DENY

{
    "address": "a",
    "cashOnDelivery": false,
    "city": "c",
    "code": "fc7a9916-1b85-11eb-a873-ec5c682bc46d",
    "country": "Egypt",
    "created": "2020-10-31T16:33:04.543590+02:00",
    "delivered_to_client": false,
    "email": "api@api.com",
    "fees": null,
    "first_name": "api Order",
    "id": 269,
    "last_name": "t",
    "paid": false,
    "phone1": "12345",
    "phone2": "1234567",
    "postal_code": "1",
    "price_before_promo_code": "",
    "promo_code": "",
    "province": null,
    "sent": false,
    "shipped": false,
    "updated": "2020-10-31T16:33:04.543663+02:00",
    "user": 1,
    "we_accept_transaction_id": ""
}

Then you have to send a request by the items stored in the local storage using the order id as foriegn key in each item added as shown:

Request:
-------
http http://localhost:8000/api/orderItems-create/ order=278 order_id=278 product=2 price=500 quantity=1 "Authorization: Token e4da7ad85b139af164054aba3ca1c18078704fe8"

Response:
---------

Allow: POST, OPTIONS
Content-Length: 81
Content-Type: application/json

{
    "id": 305,
    "order": 278,
    "order_id": "278",
    "price": "500.00",
    "product": 2,
    "quantity": 1
}


Then Calculate the total fees of the products(take care of the quantities & do not forgot to calculate the shipping cost) and update the order fees field:

REquest:
http PUT http://localhost:8000/api/order-update/278/ fees=19101 X-Api-Key:3FKxS5OI.1pS783nGBfUARlhjDxHDsOfTW5aPSeGh  "Authorization: Token e4da7ad85b139af164054aba3ca1c18078704fe8"
Response:

Allow: PUT, PATCH, OPTIONS
Content-Length: 508
Content-Type: application/json

{
    "address": "a",
    "cashOnDelivery": false,
    "city": "c",
    "code": "8eefe1ee-1bcb-11eb-a89a-ec5c682bc46e",
    "country": "Egypt",
    "created": "2020-11-01T00:51:05.534256+02:00",
    "delivered_to_client": false,
    "email": "api@api.com",
    "fees": "1000.00",   ### Field Updated 
    "first_name": "f",
    "id": 278,
    "last_name": "l",
    "paid": false,
    "phone1": "12345",
    "phone2": "1234567",
    "postal_code": "1",
    "price_before_promo_code": "",
    "promo_code": "",
    "province": null,
    "sent": false,
    "shipped": false,
    "updated": "2020-11-01T16:16:09.622202+02:00",
    "user": 1,
    "we_accept_transaction_id": ""
}







_______________________________________________________________________________
_______________________________________________________________________________
Authenticated permissions APIS:
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

To get user's data: 
===================
(Only Authenticated user with Authentication token got from login will used for sepcific user to check his data)
Note: It will not be editable via mobile app, hust allowed through the website

Request:
http http://localhost:8000/api/custom-user/ "Authorization: Token 8b11ff983764be4b26c828d6ad9cb5e6a721b919"


Response:
{
    "count": 1,
    "next": null,
    "previous": null,
    "results": [
        {
            "agreement": true,
            "city": "c",
            "country": "chilly",
            "date_joined": "2020-09-30T01:17:04.869590+03:00",
            "email": "success@desertcameldev.com",
            "first_name": "fir",
            "groups": [],
            "id": 80,
            "is_active": true,
            "is_staff": false,
            "is_superuser": false,
            "is_vip": false,
            "last_login": "2020-10-01T13:13:15.956785+03:00",
            "last_name": "las",
            "mobile": "012345678",
            "name": "myName",
            "newsLetter": true,
            "password": "pbkdf2_sha256$180000$tWMVn9VueC7q$KUQQIV0fqwi2KBpm8XVXilRAkFux/fnyBmT+ZNKqAKw=",
            "photo": "http://localhost:8000/media/static/images/clipart-travel.jpg",
            "province": "p",
            "user_permissions": [],
            "username": "Success",
            "vip_date_from": null
        }
    ]
}



----------------------------------------------------------------------
----------------------------------------------------------------------

Order details: (Of sepcific user only with authentication)
==============
http http://localhost:8000/api/orderDetails/ "Authorization: Token 8b11ff983764be4b26c828d6ad9cb5e6a721b919"

Response:
Allow: GET, HEAD, OPTIONS
        {
            "address": "مالوش مثال",
            "cashOnDelivery": true,
            "city": "الغردقة",
            "code": "cf8a000e-16d0-11eb-b8e1-ec5c682bc46d",
            "country": "Egypt",
            "created": "2020-10-25T16:46:05.588605+02:00",
            "delivered_to_client": false,
            "email": "a@a.com",
            "fees": "5165.00",
            "first_name": "جميل",
            "id": 259,
            "last_name": "جمال",
            "paid": false,
            "phone1": "123456789012",
            "phone2": null,
            "postal_code": "",
            "price_before_promo_code": "",
            "promo_code": "No Promo Code",
            "province": null,
            "sent": false,
            "shipped": false,
            "updated": "2020-10-25T16:46:05.865256+02:00",
            "user": 80,
            "we_accept_transaction_id": ""
        }

----------------------------------------------------------------------
----------------------------------------------------------------------

OrderItems: (Of sepcific user only with authentication)
=========== 
http http://localhost:8000/api/orderItems/?order-id=259 "Authorization: Token 8b11ff983764be4b26c828d6ad9cb5e6a721b919"

Response:
Allow: GET, HEAD, OPTIONS
        {
            "id": 289,
            "order": 259,
            "order_id": "259",
            "price": "500.00",
            "product": 5,
            "quantity": 5
        },
        {
            "id": 290,
            "order": 259,
            "order_id": "259",
            "price": "233.00",
            "product": 9,
            "quantity": 1
        },
        {
            "id": 291,
            "order": 259,
            "order_id": "259",
            "price": "2432.00",
            "product": 8,
            "quantity": 1
        }
    ]
}
_____________________________________________________________________________________


<<<<<<<<<<<<<<<<<<<<<<rest_framework.authtoken>>>>>>>>>>>>>>>>>>>>>>>>>>>


DONT USE THIS:
http post  http://127.0.0.1:8000/api-token-auth/ username=test@hotmail.com password="xxxxxxx"

{token: 6668c5de012a9c4bc89df5b90127133d3f6c7469}

C:\>http http://127.0.0.1:8000/api/custom-users/ "Authorization: Token 6668c5de012a9c4bc89df5b90127133d3f6c7469"
END DONT USE THIS
----------------------------------------------
----------------------------------------------

<<<<<<<<<<<<<<<<<<<<<<<  Rest Framework Registeration >>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<  Rest Framework Registeration >>>>>>>>>>>>>>>>>>>>>>>>>>>>

\Register New User:
http POST https://marchpart.com/api/v1/accounts/register/  email=sales@desertcameldev.com password=alpine12 username=test city=c province=p country=chilly mobile=012345678 first_name=fir last_name=las name=myName newsLetter=True password_confirm=alpine12
 
 And then, email will be sent to the user with link to complete the registeration process via default browser.



\Login User:
http POST https://marchpart.com/api/v1/accounts/login/  login=success@desertcameldev.com password=alpine12
{
    'token: 8b11ff983764be4b26c828d6ad9cb5e6a721b919
}

\Logout User:
http POST https://marchpart.com/api/v1/accounts/logout/  "Authorization: Token 8b11ff983764be4b26c828d6ad9cb5e6a721b919"

\Reset Password:
http POST https://marchpart.com/api/v1/accounts/send-reset-password-link/ login=success@desertcameldev.com

result:
{
    "detail": "Reset link sent"
}
(The process will be completed in the user's browser)


NOTE:
Always remember to send data between qoutations to avoid errors according to the user inputs.
Example:
if user input password: qwer&dfre , This '&' sign will generate error in your API request, so it must be like this in the request: "qwer&dfre"




______________________________________________________________________________________________
______________________________________________________________________________________________

Wishlist ADD:
---------
Request:
https://marchpart.com/api/add-wishlist/ product=1 "Authorization: Token 2aa5e75cc662e917cb943fb009d8ea528504e59"
(You will get the user's token and send the ID of the product you want to add to the wishlist)

Response:
Success:
HTTP/1.1 201 Created
Allow: POST, OPTIONS
Connection: keep-alive
Content-Length: 261
Content-Type: application/json
Date: Wed, 03 Feb 2021 10:59:54 GMT
Server: nginx/1.14.0 (Ubuntu)
Vary: Accept
X-Content-Type-Options: nosniff
X-Frame-Options: DENY

{
    "get_user": 1,
    "id": 50,
    "product": 1005,
    "product_available": "True",
    "product_name": "Rear Brake Shoe Genuine Nissan Sunny N-17 (D4060-1HD3E)",
    "product_name_arabic": "تيل خلفي أصلي نيسان صني N-17",
    "product_price": "1155.87",
    "product_sale_price": null
}

OR If product is not found:
{
    "product": [
        "Invalid pk \"6\" - object does not exist."
    ]
}


OR IF duplicated:
HTTP/1.1 200 OK
Allow: POST, OPTIONS
Connection: keep-alive
Content-Length: 54
Content-Type: application/json
Date: Wed, 03 Feb 2021 10:59:57 GMT
Server: nginx/1.14.0 (Ubuntu)
Vary: Accept
X-Content-Type-Options: nosniff
X-Frame-Options: DENY

{
    "error": "you already added this product to wishlist"
}

_______________________________________________________________________________

Whishlist GET: (Get usre's Wishlist)
------------------------------------

Request
https://marchpart.com/api/get-wishlist/ "Authorization: Token 9c2582682549844c310d7a98107a1f4cc3b7a89"

Response:
{
    "count": 3,
    "next": null,
    "previous": null,
    "results": [
        {
            "get_user": 1,
            "id": 20,
            "product": 1001,
            "product_available": "True",
            "product_name": "Negative Battery Terminal Genuine Nissan Sentra B-17 (24340-7F001)",
            "product_name_arabic": "قطاش بطارية أصلي نيسان سنترا B-17",
            "product_price": "281.99",
            "product_sale_price": null
        },
        {
            "get_user": 1,
            "id": 33,
            "product": 1,
            "product_available": "True",
            "product_name": "KRYPTON XT LA - SAE 5W40 ((1441.84)",
            "product_name_arabic": "XT LA - SAE 5W40 زيت موتور باكيلو",
            "product_price": "700.00",
            "product_sale_price": null
        }
    ]
}

_______________________________________________________________________________

Wishlist DELETE: (remove product from wishlist)
-----------------------------------------------

Request:
http delete https://marchpart.com/api/deleteWish/16 "Authorization: Token 9c2582682549844c310d7a98107a1f4cc3b7a89"
(where "16" is the ID number of the Product Itself -notice that the user is authorized-)

Response:
HTTP/1.1 200 OK
Allow: OPTIONS, DELETE
Connection: keep-alive
Content-Length: 20
Content-Type: application/json
Date: Wed, 03 Feb 2021 11:00:38 GMT
Server: nginx/1.14.0 (Ubuntu)
Vary: Accept
X-Content-Type-Options: nosniff
X-Frame-Options: DENY

{
    "detail": "deleted"
}


OR IF trying to delete not existing wishlist:

{
    "error": "Item Not Found"
}


_______________________________________________________________________________
_______________________________________________________________________________
_______________________________________________________________________________




PROMO Code:
Request:
http https://marchpart.com/api/promoCodes/

Response:
{
    "count": 1,
    "next": null,
    "previous": null,
    "results": [
        {
            "discount_ratio": 10,
            "id": 1,
            "pormotionName": "pormotion name",
            "promo_code": "testpromo",       ##### that is the promo code that you will check
            "valid_from": "2020-10-12",
            "valid_to": "2020-10-26"
        }
    ]
}

** After calculating the total fees, check if the client entered a valid promocode by cheking the field (promo_code) and compare dates of validity with current date,
   If it is vaild one use the (discount_ratio) to calculate the discount applied to the total fees..
   Then save the updated total fees and send the promocode with the order details...








_______________________________________________________________________________
_______________________________________________________________________________
_______________________________________________________________________________

Edit User Data:
Request:
http PUT https://marchpart.com/api/update-user/"fifth settelment"/none/egypt/010101010 "Authorization: token e4da7ad8b13f164054aba3ca1c18078704fe8"

- Order of data in request:
city/province/country/mobile

- Replace unchanged value with "none" as in request example

_______________________________________________________________________________
_______________________________________________________________________________
Order Details:
http https://marchpart.com/api/orderDetails/ "Authorization: token e4da7ad85b139a64054aba3ca1c18078704fe8"

- will response by complete data including items(products)
_______________________________________________________________________________
_______________________________________________________________________________
PromoCode:

Request:
http https://marchpart.com/api/promoCode/testpromo

(where "testpromo" is the promocode entered by user)

**try this promocode it is vaild till mars 2021: "Mix5"

Response:
{
    "detail": "promocode available",
    "discount": "10"
}
(where "10" is the percentage of discount)


Response(not valid):
{
    "detail": "not valid"
}
_______________________________________________________________________________
_______________________________________________________________________________


http https://marchpart.com/api/homePageBanners/












https://www.marchpart.com/orders/payment/4a63a606-897a-11eb-bb98-2e71ab482b54/None/shop_arabic/base_arabic.html

live:
e4da7ad85b139af164054aba3ca1c18078704fe8




local: 8b11ff983764be4b26c828d6ad9cb5e6a721b919



Facebook Auth Api:
_______________________________________________________________________________
Request:
http POST http://localhost:8000/auth/convert-token grant_type=convert_token client_id=NlhwFXppSIoPRqW7rTZ9Z7ZQ2PgVejEDIggf2ILa client_secret=ZhTovFpO8sAh4vciDkC6LrX3GrmwenAHIzMNSJUcNu93vKJyBqYK4z5h855k81FZOeKWsIgqT5T9xz5mDizKoXikDrAEKEjcqa9iLYb2ljA4tTx9P1YdF0FlJ3dElUlW backend=facebook token=EAARuZCtPfGZBIBAAw44rSPNoSvGkvyp5DhsmJg0VTXMXCHEo1FPhCmiOPcqgZAuSpRZBk1lOl19b9JihI8TTIxy49rPbYPZAwyzZCMWqvutIq48uoh98WA7tLb4E67MA8JbwuOHRbZC4ZBGBsMCY0rJsHVod7ZAxaNEaSjeLZCEJZBzl5HRGAnTnSu2BL5v1HvgnU9YIqEWs9Jrj7I66NtSHBuOfR4ykxagmpCQNRJb2pZCGdgZDZD

Response:
HTTP/1.1 200 OK
Allow: POST, OPTIONS
Cache-Control: no-store
Content-Length: 160
Content-Type: application/json
Date: Mon, 22 Mar 2021 01:22:56 GMT
Pragma: no-cache
Server: WSGIServer/0.2 CPython/3.6.9
Vary: Accept
X-Content-Type-Options: nosniff
X-Frame-Options: DENY

{
    "access_token": "GypBE7oTf3bz7a51mdaPWi5P8Z1Jwi",
    "expires_in": 36000,
    "refresh_token": "pcrQ9m6LaS5ZRsv8LlZLMO0NJ1VuQA",
    "scope": "read write",
    "token_type": "Bearer"
}



http POST https://marchpart.com/auth/convert-token grant_type=convert_token client_id=j5tBvzCmqbcReQfKguHhO3rmN0syRT7997abgLMR client_secret=qQlGSLxXk7jym0NQBmUlLYg38MxHhgjOI0sMQtMHfF5ZFjKcACU3MUiMgyDAyvt1YWZ62Or4PHhALE8ZrgKrgM51lSSDM1LQVt2cqt2urIGzK1DfgRR0dpeKZb4Ok5I0 backend=facebook token=EAARuZCtPfGZBIBAAw44rSPNoSvGkvyp5DhsmJg0VTXMXCHEo1FPhCmiOPcqgZAuSpRZBk1lOl19b9JihI8TTIxy49rPbYPZAwyzZCMWqvutIq48uoh98WA7tLb4E67MA8JbwuOHRbZC4ZBGBsMCY0rJsHVod7ZAxaNEaSjeLZCEJZBzl5HRGAnTnSu2BL5v1HvgnU9YIqEWs9Jrj7I66NtSHBuOfR4ykxagmpCQNRJb2pZCGdgZDZD



